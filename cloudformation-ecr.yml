AWSTemplateFormatVersion: "2010-09-09"
Description: Template for building a Docker image and deploying it to an ECR repository.
Parameters:
  GithubRepository:
    Type: String
    Default: cr-trojan23/ecr-pipeline
    Description: Git repository to use.
  Branch:
    Type: String
    Default: main
    Description: Git branch to use.
  ImageRepository:
    Type: String
    Default: custom-amazonlinux2
    Description: ECR repository to use.
  ImageTag:
    Type: String
    Default: latest
    Description: ECR image tag to use.
  Region:
    Type: String
    Default: ap-south-1
    Description: AWS region to use.
  AWSAccountId:
    Type: String
    Description: AWS account ID to use.
  RepoVisibility:
    Type: String
    Default: public
    AllowedValues:
      - public
      - private
    Description: Repository visibility.

Conditions:
  RepoIsPublic: !Equals
      - !Ref RepoVisibility
      - public
  RepoIsPrivate: !Equals
      - !Ref RepoVisibility
      - private

Metadata:
  AWS:CloudFormation::Interface:
    ParameterGroups:
      - Label: Git
        Parameters:
          - GithubRepository
          - Branch
      - Label: ECR
        Parameters:
          - ImageRepository
          - ImageTag
          - RepoVisibility
      - Label: AWS
        Parameters:
          - Region
          - AWSAccountId
Resources:
  CodeStarConnection:
    Type: "AWS::CodeStarConnections::Connection"
    Properties:
      ConnectionName: gh-ecr-connection
      ProviderType: GitHub
      Tags:
        - Key: "Name"
          Value: "github-ecr-connection"
        - Key: "CreatedBy"
          Value: "AWS CFN"
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: pipeline-bucket-v1
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Key: "Name"
          Value: "pipeline-bucket-v1"
        - Key: "CreatedBy"
          Value: "AWS CFN"
  ECRPublicRepository:
    Condition: RepoIsPublic
    Type: AWS::ECR::PublicRepository
    Properties:
      RepositoryName: !Ref ImageRepository
      RepositoryPolicyText: 
        Version: '2012-10-17'
        Statement:
        - Sid: CodeBuildAccess
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action:
          - ecr:BatchGetImage
          - ecr:GetDownloadUrlForLayer
          - ecr:BatchCheckLayerAvailability
      Tags:
        - Key: "Visibility"
          Value: !Ref RepoVisibility
        - Key: "Name"
          Value: !Ref ImageRepository
        - Key: "CreatedBy"
          Value: "AWS CFN"
  ECRPrivateRepository:
    Condition: RepoIsPrivate
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Ref ImageRepository
      RepositoryPolicyText: 
        Version: '2012-10-17'
        Statement:
        - Sid: CodeBuildAccess
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action:
          - ecr:BatchGetImage
          - ecr:GetDownloadUrlForLayer
          - ecr:BatchCheckLayerAvailability
      Tags:
        - Key: "Visibility"
          Value: !Ref RepoVisibility
        - Key: "Name"
          Value: !Ref ImageRepository
        - Key: "CreatedBy"
          Value: "AWS CFN"
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: ecr-pipeline
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Get-Source-from-github
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                ConnectionArn: !Ref CodeStarConnection
                FullRepositoryId: !Ref GithubRepository
                BranchName: !Ref Branch
              RunOrder: 1
        - Name: Build-Docker-Image
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: !Ref BuildProject
              RunOrder: 1
      Tags:
        - Key: "Name"
          Value: "ecr-pipeline"
        - Key: "CreatedBy"
          Value: "AWS CFN"
  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: ecr-build-project
      Artifacts:
        Type: CODEPIPELINE
        Name: "Artifacts"
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        Type: LINUX_CONTAINER
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: IMAGE_REPO_NAME
            Value: !Ref ImageRepository
          - Name: IMAGE_TAG
            Value: !Ref ImageTag
          - Name: REGION
            Value: !Ref Region
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWSAccountId
          - Name: REPO_VISIBILITY
            Value: !Ref RepoVisibility
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml
      Tags:
        - Key: "Name"
          Value: "ecr-build-project"
        - Key: "CreatedBy"
          Value: "AWS CFN"
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      Tags:
        - Key: "Name"
          Value: "PipelineRole"
        - Key: "CreatedBy"
          Value: "AWS CFN"
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      Tags:
        - Key: "Name"
          Value: "CodeBuildServiceRole"
        - Key: "CreatedBy"
          Value: "AWS CFN"
